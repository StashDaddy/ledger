{"version":3,"sources":["components/Footer.jsx","components/AsyncComponent.jsx","components/AppliedRoute.jsx","components/Sidebar.jsx","components/Header.jsx","components/ErrorModal.jsx","components/ConfigModal.jsx","screens/GraphQL.jsx","index.jsx","flureeFetch.js"],"names":["Footer","state","closeSlackModal","setState","showSlackModal","this","className","style","display","justifyContent","color","role","href","rel","target","React","Component","asyncComponent","importComponent","props","component","default","C","cProps","_db","rest","render","Sidebar","error","toggleOpen","toggleSideBar","toggleClose","selected","window","open","db","changeDatabase","language","changeQueryLanguage","dbs","openApiServer","queryLanguage","noDbs","length","sort","Navbar","id","fluid","Brand","to","alt","src","onClick","Nav","onSelect","handleSelect","bind","NavItem","eventKey","aria-hidden","NavDropdown","title","MenuItem","header","map","value","DropdownButton","toLowerCase","Header","width","direction","marginLeft","Text","fontSize","fontVariant","marginBottom","marginTop","ip","displayConfig","ErrorModal","errType","message","Modal","Dialog","Title","status","Body","JSON","stringify","Button","bsStyle","dismiss","ConfigModal","submitAndDismiss","defaultPrivateKey","substr","setConfig","getValidateDefaultPrivateKey","openApi","console","log","undefined","margin","border","padding","backgroundColor","Form","onSubmit","FormGroup","ControlLabel","FormControl","type","onChange","e","placeholder","disabled","GraphQLQuery","handlePrettifyQuery","graphiql","handleToggleHistory","graphQLFetcher","graphQLParams","fullDb","split","opts","body","auth","token","network","endpoint","flureeFetch","then","response","res","json","result","dismissError","displayError","catch","err","height","ref","c","fetcher","Logo","Toolbar","label","FlureeQL","Transact","SparQL","SQL","Account","Schema","ExploreDB","NetworkDashboard","NotFound","Permissions","Import","Wrapper","setOpenApiServerStatus","openApiServerStatus","config","openApiServerStatusShow","localStorage","setItem","getOpenApiServerStatus","getItem","parse","get","key","newState","getDbs","serverConfig","refreshDbs","nwStateIp","account","gateway","nwStateParams","noRedirect","isOpenApi","showServerOpenApiAlert","networkData","getConfig","Error","dbArray","database","push","potentialDefaultDb","includes","showConfig","dbName","substring","indexOf","queryLang","loading","paddingRight","position","paddingTop","marginRight","top","right","cursor","toggleshowServerOpenApiAlert","paddingLeft","overflowX","AppliedRoute","path","GraphQL","App","setMessage","document","getElementById","location","origin","port","protocol","hostname","parseJSON","newResponse","Object","assign","headers","fullUri","endpointInfix","locatedEndpoint","startURI","fullEndpoint","fetchOpts","method","Authorization","fetch","removeItem","logout"],"mappings":"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","file":"static/js/main.d17e971c.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Footer extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.setState({ showSlackModal: false });\n  }\n\n  closeSlackModal = () => {\n    this.setState({ showSlackModal: false });\n  };\n\n  render() {\n    return (\n      <div className=\"m40 text-center border-top-gray\">\n        <ul\n          className=\"nav nav-pills mt10\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            color: \"#091133\",\n          }}\n        >\n          <li role=\"presentation\">\n            <a\n              style={{ color: \"#091133\" }}\n              href=\"https://docs.flur.ee\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className=\"small strong text-muted\"\n            >\n              Documentation\n            </a>\n          </li>\n          <li role=\"presentation\">\n            <a\n              style={{ color: \"#091133\" }}\n              href=\"mailto:support@flur.ee\"\n              className=\"small strong text-muted\"\n            >\n              Contact\n            </a>\n          </li>\n          <li>\n            <a\n              style={{ color: \"#091133\" }}\n              className=\"small strong text-muted\"\n              href=\"https://launchpass.com/flureedb\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <i className=\"fab fa-slack\" />\n              &nbsp;Fluree Slack\n            </a>{\" \"}\n          </li>\n        </ul>\n        <div className=\"small\" style={{ color: \"#091133\" }}>\n          v1.0.0-beta1 &nbsp;\n          <a\n            style={{ color: \"#091133\" }}\n            href=\"https://flur.ee/agreements/FlureeEnterpriseTermsofService.pdf\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Terms\n          </a>\n          &nbsp;+&nbsp;\n          <a\n            style={{ color: \"#091133\" }}\n            href=\"https://flur.ee/wp-content/uploads/2020/07/Fluree-Privacy-Policy-6-20.pdf\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Privacy\n          </a>\n          &nbsp;© Fluree, PBC\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component: component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? <C {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, _db, ...rest }) => (\n  <Route {...rest} render={(props) => <C {...props} _db={_db} {...cProps} />} />\n);\n","import React from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavDropdown,\n  MenuItem,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport { Switch } from \"react-router-dom\";\n\nclass Sidebar extends React.Component {\n  state = {\n    error: null,\n    toggleOpen: false,\n  };\n\n  handleSelect(selected) {\n    selected = selected || {};\n    if (selected === \"docs\") {\n      window.open(\"https://docs.flur.ee/\", \"_blank\");\n    }\n    if (selected.db) {\n      this.props._db.changeDatabase(selected.db);\n    }\n    if (selected.language) {\n      this.props._db.changeQueryLanguage(selected.language);\n    }\n  }\n\n  toggleSideBar = () => {\n    this.setState({ toggleOpen: !this.state.toggleOpen });\n  };\n\n  toggleOpen = () => {\n    this.setState({ toggleOpen: true });\n  };\n\n  toggleClose = () => {\n    this.setState({ toggleOpen: false });\n  };\n\n  render() {\n    let { dbs, db, queryLanguage } = this.props._db;\n    let openApiServer = this.props.openApiServer;\n\n    const noDbs = dbs.length === 0 ? true : false;\n\n    if (!noDbs) {\n      dbs = dbs.sort();\n    }\n\n    return (\n      <div>\n        <Navbar\n          id=\"navbar-side\"\n          fluid\n          className={\n            this.state.toggleOpen\n              ? \"navbar-side toggled-open-sidebar\"\n              : \"navbar-side untoggled-closed-sidebar\"\n          }\n        >\n          <Navbar.Brand className=\"nav-hide-md\">\n            <LinkContainer to=\"/\">\n              <img\n                id=\"img-brand\"\n                alt=\"FlureeDB\"\n                src=\"/logo_horizontal_white.png\"\n              />\n            </LinkContainer>\n          </Navbar.Brand>\n\n          <i\n            className=\"fas fa-bars menu-symbol nav-show-md toggle-button\"\n            onClick={this.toggleSideBar}\n          />\n          {noDbs ? (\n            <Nav onSelect={this.handleSelect.bind(this)}>\n              <LinkContainer to=\"/account\" id=\"account-nav\">\n                <NavItem eventKey={1}>\n                  <i\n                    className=\"fas fa-info-circle hidden-sm-down menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item account-link\"\n                        : \"menu-item account-link\"\n                    }\n                  >\n                    Account Info\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              <li>\n                <hr className=\"border-top-solid-gray\" />\n              </li>\n              <NavItem\n                eventKey=\"docs\"\n                href=\"https://docs.flur.ee\"\n                target=\"_blank\"\n                className=\"docs\"\n                id=\"docs-nav\"\n              >\n                <i className=\"fas fa-book menu-symbol\" />\n                <span\n                  className={\n                    !this.state.toggleOpen\n                      ? \"nav-hide-md menu-item\"\n                      : \"menu-item\"\n                  }\n                >\n                  Docs\n                </span>\n              </NavItem>\n            </Nav>\n          ) : (\n            <Nav onSelect={this.handleSelect.bind(this)}>\n              <LinkContainer to=\"/account\" id=\"account-nav\">\n                <NavItem eventKey={2}>\n                  <i\n                    className=\"fas fa-info-circle hidden-sm-down menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item account-link\"\n                        : \"menu-item account-link\"\n                    }\n                  >\n                    Dashboard\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              <NavDropdown\n                onClick={this.toggleOpen}\n                title={\n                  <span>\n                    <span>\n                      <i\n                        className=\"fas fa-cube menu-symbol\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span\n                        className={\n                          !this.state.toggleOpen\n                            ? \"nav-hide-md menu-item\"\n                            : \"menu-item\"\n                        }\n                      >\n                        {db}\n                      </span>\n                    </span>\n                  </span>\n                }\n                id=\"database-dropdown\"\n              >\n                <MenuItem header>Select Ledger:</MenuItem>\n                {dbs.map((db) => (\n                  <MenuItem\n                    onClick={this.toggleClose}\n                    eventKey={{ db: db }}\n                    key={db}\n                    value={db}\n                  >\n                    {db}\n                  </MenuItem>\n                ))}\n              </NavDropdown>\n\n              <li>\n                <hr className=\"border-top-solid-gray\" />\n              </li>\n\n              <DropdownButton\n                id=\"queryButton\"\n                title={\n                  <span>\n                    <span>\n                      <i\n                        className=\"fas fa-search menu-symbol\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span\n                        className={\n                          !this.state.toggleOpen\n                            ? \"nav-hide-md menu-item\"\n                            : \"menu-item\"\n                        }\n                      >\n                        Query\n                      </span>\n                    </span>\n                    {/* <span\n                            className={!this.state.toggleOpen ? \"nav-hide-md\" : null}\n                    >\n                            <i className=\"fas fa-caret-down dropdown\" />\n                    </span> */}\n                  </span>\n                }\n              >\n                {[\"FlureeQL\", \"SPARQL\", \"GraphQL\", \"SQL\"].map((language) => (\n                  <LinkContainer\n                    to={`/${language.toLowerCase()}`}\n                    className=\"text-center\"\n                    key={language}\n                  >\n                    <MenuItem key={language}>{language}</MenuItem>\n                  </LinkContainer>\n                ))}\n              </DropdownButton>\n\n              <LinkContainer to=\"/transact\">\n                <NavItem eventKey={4} href=\"#\">\n                  <i\n                    className=\"fas fa-handshake menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item\"\n                        : \"menu-item\"\n                    }\n                  >\n                    Transact\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              <LinkContainer to=\"/schema\">\n                <NavItem eventKey={5} href=\"#\">\n                  <i\n                    className=\"fas fa-database menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item\"\n                        : \"menu-item\"\n                    }\n                  >\n                    Schema\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              {openApiServer && (\n                <LinkContainer to=\"/networkdashboard\">\n                  <NavItem eventKey={6} href=\"#\">\n                    <i\n                      className=\"fas fa-network-wired menu-symbol\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span\n                      className={\n                        !this.state.toggleOpen\n                          ? \"nav-hide-md menu-item\"\n                          : \"menu-item\"\n                      }\n                    >\n                      Network Dashboard\n                    </span>\n                  </NavItem>\n                </LinkContainer>\n              )}\n              {openApiServer && (\n                <LinkContainer to=\"/exploredb\">\n                  <NavItem eventKey={7} href=\"#\">\n                    <i\n                      className=\"fas fa-search  menu-symbol\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span\n                      className={\n                        !this.state.toggleOpen\n                          ? \"nav-hide-md menu-item\"\n                          : \"menu-item\"\n                      }\n                    >\n                      Explore Ledger\n                    </span>\n                  </NavItem>\n                </LinkContainer>\n              )}\n\n              <LinkContainer to=\"/import\">\n                <NavItem eventKey={8} href=\"#\">\n                  <i\n                    className=\"far fa-chart-bar menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item\"\n                        : \"menu-item\"\n                    }\n                  >\n                    Import\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              <LinkContainer to=\"/permissions\">\n                <NavItem eventKey={9} href=\"#\">\n                  <i\n                    className=\"fas fa-file-import menu-symbol\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <span\n                    className={\n                      !this.state.toggleOpen\n                        ? \"nav-hide-md menu-item\"\n                        : \"menu-item\"\n                    }\n                  >\n                    Permissions\n                  </span>\n                </NavItem>\n              </LinkContainer>\n              <li>\n                <hr className=\"border-top-solid-gray\" />\n              </li>\n              <NavItem\n                eventKey=\"docs\"\n                href=\"https://docs.flur.ee\"\n                target=\"_blank\"\n                className=\"docs\"\n                id=\"docs-nav\"\n              >\n                <i className=\"fas fa-book menu-symbol\" />\n                <span\n                  className={\n                    !this.state.toggleOpen\n                      ? \"nav-hide-md menu-item\"\n                      : \"menu-item\"\n                  }\n                >\n                  Docs\n                </span>\n              </NavItem>\n            </Nav>\n          )}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Navbar, Nav, NavDropdown, MenuItem } from \"react-bootstrap\";\n\nconst DownloadedNav = (props) => {\n  return (\n    <Nav id=\"config-container\">\n      <NavDropdown\n        eventKey={4}\n        title=\"Change Config\"\n        id=\"basic-nav-dropdown\"\n        className=\"account-icon\"\n      >\n        <Navbar.Text\n          style={{\n            fontSize: \"14px\",\n            fontVariant: \"small-caps\",\n            color: \"black\",\n            marginBottom: \"5px\",\n            marginTop: \"5px\",\n          }}\n        >\n          IP: <span style={{ color: \"rgb(101, 99, 99)\" }}>{props._db.ip}</span>\n        </Navbar.Text>\n        <MenuItem id=\"changeIPText\" onClick={() => props._db.displayConfig()}>\n          Change Config\n        </MenuItem>\n      </NavDropdown>\n    </Nav>\n  );\n};\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div style={{ width: \"100%\", display: \"flex\", direction: \"row\" }}>\n        <div style={{ marginLeft: \"80%\" }}>{DownloadedNav(this.props)}</div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nclass ErrorModal extends React.Component {\n  render() {\n    const error = this.props.error;\n    const errType = error.error;\n    const message =\n      error.message || error.error || \"No Message Provided with Error.\";\n\n    return (\n      <div className=\"static-modal\">\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>Error processing action ({error.status})</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            {errType ? <p>Error type: {errType}</p> : null}\n            <p>{message}</p>\n            <p>{JSON.stringify(error)}</p>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button bsStyle=\"primary\" onClick={this.props.dismiss}>\n              Dismiss\n            </Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ErrorModal;\n","import React from \"react\";\nimport {\n  Button,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  Modal,\n  Checkbox,\n} from \"react-bootstrap\";\n\nclass ConfigModal extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    if (this.props._db) {\n      console.log(this.props._db);\n      let { ip, openApiServer, defaultPrivateKey } = this.props._db;\n      console.log(ip);\n      this.setState({\n        ip: ip,\n        openApiServer: openApiServer,\n        defaultPrivateKey: defaultPrivateKey,\n      });\n    }\n  }\n\n  submitAndDismiss = () => {\n    let { ip, defaultPrivateKey } = this.state;\n    if (ip.substr(-1) === \"/\") {\n      ip = ip.substr(0, ip.length - 1);\n    }\n    this.props.setConfig(ip, defaultPrivateKey);\n  };\n\n  getValidateDefaultPrivateKey = () => {\n    if (this.state.defaultPrivateKey || this.state.openApi) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  render() {\n    const error = this.props.error;\n    let errType, message;\n    if (error !== undefined && error !== null) {\n      errType = error.error;\n      message =\n        error.message || error.error || \"No Message Provided with Error.\";\n    }\n    return (\n      <div className=\"static-modal\">\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>\n              {this.props.error ? (\n                <span>Error processing action ({error.status}) </span>\n              ) : (\n                <span>Config Settings</span>\n              )}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.props.error ? (\n              <div>\n                {/* <div style={{border: \"3px outset #d68484\", marginBottom: \"10px\", padding: \"5px\", backgroundColor: \"#ffeded\"}}>\n               <p>Error processing action young fella ({error.status}) </p>\n                {errType ? <p>Error type: {errType}</p> : null}\n                <p>{message}</p>\n                <p>{JSON.stringify(error)}</p>\n              </div> */}\n                <div\n                  className=\"row\"\n                  style={{\n                    margin: \"20px 0 25px\",\n                    border: \"3px outset #d68484\",\n                    padding: \"10px\",\n                    backgroundColor: \"#ffeded\",\n                  }}\n                >\n                  <div className=\"col-sm-2\">\n                    <i style={{ fontSize: \"35px\" }} className=\"fas fa-wrench\" />\n                  </div>\n                  <div className=\"col-sm-10\">\n                    Unable to communicate to server at: {this.state.ip}.\n                    <br></br>\n                    <br></br>\n                    If you believe this error to have been caused by an\n                    incorrect IP address or URL, you can change it below.\n                  </div>\n                  <br />\n                </div>\n              </div>\n            ) : null}\n            <Form onSubmit={this.submitAndDismiss}>\n              <FormGroup>\n                <ControlLabel>Target Server URL</ControlLabel>\n                <FormControl\n                  type=\"text\"\n                  value={this.state.ip}\n                  onChange={(e) => this.setState({ ip: e.target.value })}\n                />\n              </FormGroup>\n\n              {this.state.openApiServer ? null : (\n                <FormGroup>\n                  <ControlLabel>Default Private Key</ControlLabel>\n                  <FormControl\n                    type=\"text\"\n                    value={this.state.defaultPrivateKey}\n                    placeholder=\"Default Private Key\"\n                    onChange={(e) =>\n                      this.setState({ defaultPrivateKey: e.target.value })\n                    }\n                  />\n                </FormGroup>\n              )}\n              <Button\n                disabled={this.getValidateDefaultPrivateKey()}\n                className=\"buttonPurple\"\n                type=\"submit\"\n              >\n                Set Config\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal.Dialog>\n      </div>\n    );\n  }\n}\n\nexport default ConfigModal;\n","import React from \"react\";\nimport GraphiQL from \"graphiql\";\nimport { flureeFetch } from \"../flureeFetch\";\nimport \"../components/graphiql.css\";\n\nexport default class GraphQLQuery extends React.Component {\n  state = {};\n\n  handlePrettifyQuery = () => {\n    this.graphiql && this.graphiql.handlePrettifyQuery();\n  };\n\n  handleToggleHistory = () => {\n    this.graphiql && this.graphiql.handleToggleHistory();\n  };\n\n  graphQLFetcher = (graphQLParams) => {\n    const fullDb = this.props._db.db.split(\"/\");\n\n    let opts = {\n      ip: this.props._db.ip,\n      body: graphQLParams,\n      auth: this.props._db.token,\n      network: fullDb[0],\n      endpoint: \"graphql\",\n      db: fullDb[1],\n    };\n\n    return flureeFetch(opts)\n      .then((response) => {\n        let res = response.json || response;\n        res = res.result || res;\n        if (res.status > 400) {\n          this.props._db.displayError(res);\n        } else {\n          this.props._db.dismissError();\n          return res;\n        }\n      })\n      .catch((err) => {\n        this.props._db.displayError(err);\n      });\n  };\n\n  render() {\n    const { openApiServer } = this.props._db;\n    return (\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        {openApiServer ? (\n          <GraphiQL\n            ref={(c) => {\n              this.graphiql = c;\n            }}\n            fetcher={this.graphQLFetcher}\n          >\n            <GraphiQL.Logo>GraphQL</GraphiQL.Logo>\n            <GraphiQL.Toolbar>\n              <GraphiQL.Button\n                onClick={this.handlePrettifyQuery}\n                title=\"Prettify Query\"\n                label=\"Prettify\"\n              />\n              <GraphiQL.Button\n                onClick={this.handleToggleHistory}\n                title=\"Show History\"\n                label=\"History\"\n              />\n            </GraphiQL.Toolbar>\n          </GraphiQL>\n        ) : (\n          <div className=\"text-center mt20\">\n            <h3>\n              The GraphQL page is not currently available with a closed API.\n            </h3>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport get from \"lodash.get\";\nimport asyncComponent from \"./components/AsyncComponent\";\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport Sidebar from \"./components/Sidebar\";\nimport Header from \"./components/Header\";\nimport ErrorModal from \"./components/ErrorModal\";\nimport ConfigModal from \"./components/ConfigModal\";\nimport Footer from \"./components/Footer\";\n\nimport \"./theme/bootstrap.css\";\nimport \"./theme/custom.css\";\nimport { flureeFetch, gateway } from \"./flureeFetch\";\nimport GraphQL from \"./screens/GraphQL\";\n\nconst FlureeQL = asyncComponent(() => import(\"./screens/FlureeQL\"));\nconst Transact = asyncComponent(() => import(\"./screens/Transact\"));\nconst SparQL = asyncComponent(() => import(\"./screens/SparQL\"));\nconst SQL = asyncComponent(() => import(\"./screens/SQL\"));\nconst Account = asyncComponent(() => import(\"./screens/Account\"));\nconst Schema = asyncComponent(() => import(\"./screens/Schema\"));\nconst ExploreDB = asyncComponent(() => import(\"./screens/ExploreDB\"));\nconst NetworkDashboard = asyncComponent(() =>\n  import(\"./screens/NetworkDashboard\")\n);\n\nconst NewSignUp = asyncComponent(() => import(\"./screens/NewSignUp\"));\nconst NotFound = asyncComponent(() => import(\"./screens/NotFound\"));\nconst Permissions = asyncComponent(() => import(\"./screens/Permissions\"));\nconst Import = asyncComponent(() => import(\"./screens/Import\"));\n\nclass Wrapper extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    const newState = {};\n\n    const { token, account } = this.props;\n    let nwStateIp = gateway();\n    let nwStateParams = {\n      endpoint: \"nw-state\",\n      ip: nwStateIp,\n      noRedirect: true,\n    };\n\n    const queryLanguage = localStorage.getItem(\"queryLanguage\");\n    \n    if (queryLanguage) {\n      newState[\"queryLanguage\"] = queryLanguage;\n      this.setState(newState);\n    } else {\n      newState[\"queryLanguage\"] = \"FlureeQL\";\n      localStorage.setItem(\"queryLanguage\", \"FlureeQL\");\n      this.setState(newState);\n    }\n\n    flureeFetch(nwStateParams)\n      .then((response) => {\n        let isOpenApi = response.json[\"open-api\"];\n        let openApiServerStatusShow = this.getOpenApiServerStatus();\n        if (openApiServerStatusShow === undefined) {\n          this.setOpenApiServerStatus(isOpenApi);\n          openApiServerStatusShow = !isOpenApi;\n        }\n\n        this.setState({\n          showServerOpenApiAlert: openApiServerStatusShow,\n          openApiServer: isOpenApi,\n          ip: nwStateIp,\n          networkData: response.json,\n        });\n\n        // determine if need to display config\n        const config = this.getConfig();\n        if ((!config || !config.defaultPrivateKey) && !isOpenApi) {\n          newState[\"showConfig\"] = true;\n        }\n\n        // Determine whether or not to prompt for \"default\" private key\n        let defaultPrivateKey;\n        if (config !== false) {\n          defaultPrivateKey = config.defaultPrivateKey;\n        }\n        if ((config === false || !config.defaultPrivateKey) && !isOpenApi) {\n          newState[\"showConfig\"] = true;\n        }\n        newState[\"ip\"] = nwStateIp;\n        newState[\"defaultPrivateKey\"] = defaultPrivateKey;\n        newState[\"account\"] = \"Fluree\";\n        \n        this.setState(newState);\n      })\n      .catch((error) => {\n        this.displayError(error);\n      });\n\n    const dbs = this.getDbs(newState[\"ip\"], token);\n    dbs.then((res) => {\n      if (res instanceof Error) {\n        newState[\"showConfig\"] = true;\n        newState[\"error\"] = res;\n        this.setState(newState);\n        return;\n      } else {\n        let dbArray = [];\n        res.map((database) => {\n          dbArray.push(`${database[0]}/${database[1]}`);\n        });\n        newState[\"dbs\"] = dbArray;\n\n        if (res.length === 0) {\n          newState[\"noDbs\"] = true;\n          this.setState(newState);\n          return;\n        } else if (res.length === 1) {\n          newState[\"db\"] = dbArray[0];\n          localStorage.setItem(\"database\", dbArray[0]);\n          this.setState(newState);\n        } else {\n          // if multiple, see if there is a chosen + existing db...\n          const potentialDefaultDb = localStorage.getItem(\"database\");\n          if (dbArray.includes(potentialDefaultDb)) {\n            newState[\"db\"] = potentialDefaultDb;\n            this.setState(newState);\n          } else {\n            newState[\"db\"] = dbArray[0];\n            localStorage.setItem(\"database\", dbArray[0]);\n            this.setState(newState);\n          }\n        }\n      }\n    });\n    ;\n  }\n\n  setOpenApiServerStatus = (openApiServerStatus) => {\n    const config = {\n      openApiServerStatusShow: openApiServerStatus ? false : true,\n    };\n    localStorage.setItem(\"openApiServerConfig\", JSON.stringify(config));\n  };\n\n  getOpenApiServerStatus = () => {\n    let config = localStorage.getItem(\"openApiServerConfig\");\n    config = JSON.parse(config);\n\n    let openApiServerStatusShow = get(config, \"openApiServerStatusShow\");\n\n    return openApiServerStatusShow;\n  };\n\n  dismiss = (key) => {\n    const newState = {};\n    newState[key] = null;\n    if (key === \"showConfig\" || key === \"displayError\") {\n      newState[\"error\"] = null;\n    }\n    this.setState(newState);\n  };\n\n  displayError(error) {\n    this.setState({ error: error });\n  }\n\n  displayConfig(error) {\n    this.setState({ showConfig: true, displayError: false, error: error });\n  }\n\n  getConfig() {\n    let config = localStorage.getItem(\"flureeConfig\");\n    config = JSON.parse(config);\n\n    let ip = get(config, \"ip\");\n    let defaultPrivateKey = get(config, \"defaultPrivateKey\");\n    let openApiServerStatus = get(config, \"openApiServerStatus\");\n\n    const configNotSet =\n      ip === null ||\n      ip === undefined ||\n      defaultPrivateKey === undefined ||\n      defaultPrivateKey === null;\n\n    if (configNotSet) {\n      return false;\n    } else {\n      return {\n        ip: ip,\n        defaultPrivateKey: defaultPrivateKey,\n        openApiServerStatus: openApiServerStatus,\n      };\n    }\n  }\n\n  getDbs = (ip, auth) => {\n    let opts = { ip: ip, auth: auth, endpoint: \"dbs\" };\n\n    const dbs = flureeFetch(opts);\n\n    if (dbs.status >= 400) {\n      return dbs;\n    }\n\n    return dbs.then((response) => {\n      if (response.json) {\n        return response.json;\n      }\n      return response;\n    });\n  };\n\n  setConfig = (ip, defaultPrivateKey, openApiServerStatus) => {\n    let serverConfig = {\n      ip: ip,\n      defaultPrivateKey: defaultPrivateKey,\n      openApiServerStatus: openApiServerStatus,\n    };\n    localStorage.setItem(\"flureeConfig\", JSON.stringify(serverConfig));\n\n    serverConfig[\"showConfig\"] = false;\n    serverConfig[\"error\"] = null;\n\n    this.setState(serverConfig, () => this.refreshDbs(ip));\n  };\n\n  changeDatabase(dbName) {\n    localStorage.setItem(\"database\", dbName);\n    const account = dbName.substring(0, dbName.indexOf(\".\"));\n    this.setState({ db: dbName, account: account });\n  }\n\n  changeQueryLanguage(queryLang) {\n    localStorage.setItem(\"queryLanguage\", queryLang);\n    this.setState({ queryLanguage: queryLang });\n  }\n  toggleshowServerOpenApiAlert() {\n    this.setOpenApiServerStatus(true);\n    let openApiServerStatusShow = this.getOpenApiServerStatus();\n    this.setState({\n      showServerOpenApiAlert: openApiServerStatusShow,\n    });\n  }\n  refreshDbs() {\n    const { ip } = this.state;\n    const dbs = this.getDbs(ip, this.props.token);\n\n    if (dbs.status >= 400) {\n      this.setState({ error: dbs.message });\n      return;\n    }\n\n    dbs.then((res) => {\n      if (res instanceof Error) {\n        this.setState({ showConfig: true, error: true });\n        return;\n      }\n\n      let dbArray = [];\n      res.map((database) => {\n        dbArray.push(`${database[0]}/${database[1]}`);\n      });\n\n      if (res.length === 0) {\n        this.setState({ dbs: dbArray, noDbs: true });\n        return;\n      } else if (res.length === 1) {\n        localStorage.setItem(\"database\", dbArray[0]);\n        this.setState({ dbs: dbArray, db: dbArray[0], noDbs: false });\n        return;\n      } else {\n        // if multiple, see if there is a chosen + existing db...\n        const potentialDefaultDb = localStorage.getItem(\"database\");\n        if (dbArray.includes(potentialDefaultDb)) {\n          this.setState({ dbs: dbArray, db: potentialDefaultDb });\n        } else {\n          localStorage.setItem(\"database\", dbArray[0]);\n          this.setState({ dbs: dbArray, db: dbArray[0], noDbs: false });\n        }\n      }\n    });\n  }\n\n  render() {\n    const dbs = this.state.dbs;\n\n    var _db = {\n      dbs: dbs,\n      db: this.state.db,\n      queryLanguage: this.state.queryLanguage,\n      changeQueryLanguage: this.changeQueryLanguage.bind(this),\n      displayConfig: this.displayConfig.bind(this),\n      displayError: this.displayError.bind(this),\n      dismissError: this.dismiss.bind(this),\n      loading: this.state.loading,\n      changeDatabase: this.changeDatabase.bind(this),\n      refreshDbs: this.refreshDbs.bind(this),\n      ip: this.state.ip,\n\n      defaultPrivateKey: this.state.defaultPrivateKey,\n      openApiServer: this.state.openApiServer,\n      networkData: this.state.networkData,\n    };\n\n    if (dbs === undefined) {\n      return (\n        <div>\n          {this.state.showConfig ? (\n            <ConfigModal\n              _db={_db}\n              error={this.state.error}\n              setConfig={this.setConfig.bind(this)}\n            />\n          ) : (\n            \"Loading....\"\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={_db.db} className=\"container-fluid\" style={{ width: \"100%\" }}>\n          {this.state.showServerOpenApiAlert ? (\n            <div\n              className=\"row\"\n              style={{\n                margin: \"0\",\n                paddingRight: \"5px\",\n                backgroundColor: \"#F8D7DA\",\n                color: \"#721C24\",\n                position: \"relative\",\n              }}\n            >\n              <p\n                style={{\n                  paddingTop: \"4px\",\n                  marginLeft: \"35%\",\n                  marginRight: \"35s%\",\n                }}\n              >\n                Fluree server is running with closed API. fdb-api-open is set to\n                false in settings.\n              </p>\n              <p\n                style={{\n                  position: \"absolute\",\n                  top: \"0\",\n                  right: \"0\",\n                  cursor: \"pointer\",\n                  paddingRight: \"4px\",\n                }}\n                onClick={() => this.toggleshowServerOpenApiAlert()}\n              >\n                x\n              </p>\n            </div>\n          ) : null}\n          <div\n            className=\"col-md-3 col-xs-1\"\n            style={{\n              height: \"100vh\",\n              padding: \"0px\",\n              position: \"fixed\",\n              margin: \"0\",\n            }}\n          >\n            <Sidebar\n              _db={_db}\n              openApiServer={this.state.openApiServer}\n              {...this.props}\n              style={{ width: \"100%\", margin: \"0\" }}\n            />\n          </div>\n\n          {this.state.error ? (\n            <ErrorModal\n              error={this.state.error}\n              dismiss={this.dismiss.bind(this, \"error\")}\n            />\n          ) : null}\n          {this.state.showConfig ? (\n            <ConfigModal\n              _db={_db}\n              error={this.state.error}\n              setConfig={this.setConfig.bind(this)}\n            />\n          ) : null}\n\n          <div\n            id=\"main-content-wrapper\"\n            className=\"col-md-9 col-xs-11\"\n            style={{ paddingLeft: \"20px\", height: \"100%\", overflowX: \"hidden\" }}\n          >\n            <div style={{ padding: \"0px\" }}>\n              <Header _db={_db} {...this.props} />\n            </div>\n            {this.state.noDbs ? (\n              <Switch>\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/account\"\n                  component={Account}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/\"\n                  component={Account}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            ) : (\n              <Switch>\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/account\"\n                  component={Account}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/flureeql\"\n                  component={FlureeQL}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/transact\"\n                  component={Transact}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/sparql\"\n                  component={SparQL}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/sql\"\n                  component={SQL}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/graphql\"\n                  component={GraphQL}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/schema\"\n                  component={Schema}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/exploredb\"\n                  component={ExploreDB}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/networkdashboard\"\n                  component={NetworkDashboard}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/permissions\"\n                  component={Permissions}\n                />\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/import\"\n                  component={Import}\n                />\n\n                <AppliedRoute\n                  props={this.props}\n                  _db={_db}\n                  path=\"/\"\n                  component={Account}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            )}\n            <div className=\"row\">\n              <Footer />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    message: \"\",\n  };\n\n  setMessage = (message) => {\n    this.setState({ message: message });\n  };\n\n  render() {\n    const childProps = {\n      message: this.state.message,\n      setMessage: this.setMessage,\n    };\n\n    return (\n      <div style={{ height: \"100vh\" }}>\n        <Router>\n          <Route path=\"/\" component={Wrapper} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById(\"fluree-app\"));\n","import fetch from \"isomorphic-fetch\";\n\nfunction gateway() {\n  let production = process.env.NODE_ENV === \"production\";\n  // production build is same for prod, staging & test environments\n\n  if (production) {\n    return window.location.origin\n      ? window.location.origin\n      : window.location.port\n      ? window.location.protocol +\n        \"//\" +\n        window.location.hostname +\n        \":\" +\n        window.location.port\n      : window.location.protocol + \"//\" + window.location.hostname;\n  } else {\n    return \"http://localhost:8080\";\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json().then(function (json) {\n    const newResponse = Object.assign(response, { json });\n\n    if (response.status < 300) {\n      return newResponse;\n    } else {\n      throw newResponse;\n    }\n  });\n}\n\nfunction fullEndpoint(endpoint, network, db, body, ip) {\n  const endpointInfix = \"fdb\";\n\n  const locatedEndpoint = [\n    \"query\",\n    \"multi-query\",\n    \"block\",\n    \"history\",\n    \"transact\",\n    \"graphql\",\n    \"sparql\",\n    \"sql\",\n    \"command\",\n    \"ledger-stats\",\n    \"block-range-with-txn\",\n    \"nw-state\"\n  ].includes(endpoint);\n\n  const startURI = gateway();\n\n  if (locatedEndpoint) {\n\n    if (endpoint === \"nw-state\") {\n      return `${startURI}/${endpointInfix}/${endpoint}`;\n    } else {\n      return `${startURI}/${endpointInfix}/${network}/${db}/${endpoint}`;\n    }\n  }\n\n  const prefixedEndpoints = [\n    \"dbs\",\n    \"action\",\n    \"new-db\",\n    \"accounts\",\n    \"signin\",\n    \"health\",\n    \"sub\",\n    \"new-pw\",\n    \"reset-pw\",\n    \"activate-account\",\n    \"delete-db\",\n  ].includes(endpoint);\n\n  if (prefixedEndpoints) {\n    return `${startURI}/${endpointInfix}/${endpoint}`;\n  }\n\n  if (endpoint === \"logs\") {\n    return `${startURI}/${endpointInfix}/fdb/${endpoint}/${network}`;\n  }\n\n  throw {\n    status: 400,\n    message: \"Invalid endpoint\",\n  };\n}\n\nconst flureeFetch = (opts) => {\n  \n  const { ip, body, auth, network, db, endpoint, headers, noRedirect } = opts;\n  const fullUri = fullEndpoint(endpoint, network, db, body, ip);\n\n  const finalHeaders = headers\n    ? headers\n    : {\n        \"Content-Type\": \"application/json\",\n        \"Request-Timeout\": 20000,\n        Authorization: `Bearer ${auth}`,\n      };\n\n  const fetchOpts = {\n    method: \"POST\",\n    headers: finalHeaders,\n    body: JSON.stringify(body),\n  };\n\n  return fetch(fullUri, fetchOpts)\n    .then(parseJSON)\n    .catch((error) => {\n      if (!noRedirect && (error.status === 401 || error.status === 403)) {\n        localStorage.removeItem(\"token\");\n        if (this.props) {\n          this.props.logout();\n        } else {\n          window.location = \"/\";\n        }\n      } else {\n        if (error.json) {\n          return error.json;\n        }\n        return error;\n      }\n    });\n};\n\nexport { flureeFetch, gateway };\n"],"sourceRoot":""}
{"version":3,"sources":["../static/js/11.6decf8d4.chunk.js","screens/NetworkDashboard.js","components/NetworkScreenCard.js"],"names":["webpackJsonp","610","module","__webpack_exports__","__webpack_require__","NetworkDashboard","_ref","_db","networkData","index","leader","raft","term","id","commit","serverStatusObject","networks","tranxQueue","version","arrayOfNetworks","map","item","Object","keys","numberOfNetworks","length","newDbQueue","currentNetwork","db","split","_useState","i","__WEBPACK_IMPORTED_MODULE_0_react__","_useState2","_slicedToArray","selectedNetwork","setSelectedNetwork","currentNetworkDataObject","filter","currentNetworkDbsArray","currentNetworkDbsTableBody","status","block","numberOfTranxInQueue","numberOfNewDbInQueue","serverStatusTableHeadings","tableHeadings","renderTableHeader","key","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","style","textAlign","className","__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__","marginTop","paddingLeft","marginRight","value","onChange","e","target","marginLeft","borderRadius","border","padding","color","fontWeight","placeholder","__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__","name","tooltipText","paddingTop","striped","bordered","hover","size","arrayServerStatusObject","rowData","arrayOfNetworksDBs","toUpperCase","defineProperty","n","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","TypeError","863","NetworkScreenCard","_ref$tooltipText","display","flexDirection","justifyContent","backgroundColor","height","__WEBPACK_IMPORTED_MODULE_1_react_bootstrap__","placement","overlay","maxWidth","cursor"],"mappings":"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","file":"static/js/11.6decf8d4.chunk.js","sourcesContent":["webpackJsonp([11],{\n\n/***/ 610:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"default\"] = NetworkDashboard;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__ = __webpack_require__(863);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_bootstrap__ = __webpack_require__(52);\nvar _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();function NetworkDashboard(_ref){var _db=_ref._db;var Capitalize=function Capitalize(word){return word[0].toUpperCase()+word.substring(1).toLowerCase();};var networkData=_db.networkData;var index=networkData.index,leader=networkData.leader,raft=networkData.raft,id=networkData.id,commit=networkData.commit,term=networkData.term;var serverStatusObject=networkData[\"svr-state\"];var timeOut=networkData[\"timeout-ms\"];var networks=raft.networks,version=raft.version;var tranxQueue=raft[\"cmd-queue\"];var arrayOfNetworks=networks.map(function(item){return Object.keys(item)[0];});var numberOfNetworks=arrayOfNetworks.length;var newDbQueue=raft[\"new-db-queue\"];var currentNetwork=_db.db.split(\"/\")[0];var _useState=__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_react__[\"useState\"])(currentNetwork),_useState2=_slicedToArray(_useState,2),selectedNetwork=_useState2[0],setSelectedNetwork=_useState2[1];var currentNetworkDataObject=networks.filter(function(item){return item[selectedNetwork];})[0][selectedNetwork][\"dbs\"];var currentNetworkDbsArray=Object.keys(currentNetworkDataObject);var currentNetworkDbsTableBody=currentNetworkDbsArray.map(function(item){return{db:selectedNetwork+\"/\"+item,status:currentNetworkDataObject[item][\"status\"],block:currentNetworkDataObject[item][\"block\"]};});var numberOfTranxInQueue=tranxQueue.filter(function(item){//grab the transaction queue of the selected network\nreturn selectedNetwork===Object.keys(item)[0];}).map(function(item){return item[selectedNetwork];})[0];var numberOfNewDbInQueue=newDbQueue.filter(function(item){//grab the new database queue of the selected network\nreturn selectedNetwork===Object.keys(item)[0];}).map(function(item){return item[selectedNetwork];})[0];var serverStatusTableHeadings=[\"Server\",\"Status\"];var tableHeadings=[\"Ledgers\",\"Status\",\"Block\"];var renderTableHeader=function renderTableHeader(tableHeadings){return tableHeadings.map(function(key,index){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"th\",{style:{textAlign:\"center\"},key:index},key);});};var renderServerStatusTable=function renderServerStatusTable(arrayServerStatusObject){return arrayServerStatusObject.map(function(rowData){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"table-content-centered Block\"},rowData.id),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"table-content-centered \"},rowData[\"active?\"]?\"Active\":\"Inactive\"));});};var renderNetworkDbsTable=function renderNetworkDbsTable(arrayOfNetworksDBs){return arrayOfNetworksDBs.map(function(rowData){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tr\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"table-content-centered Block\"},rowData.db),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"table-content-centered\"},rowData.status.toUpperCase()),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"td\",{className:\"table-content-centered\"},rowData.block));});};return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-wrapper\",style:{textAlign:\"center\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"e\" /* Form */],{style:{marginTop:\"20px\",textAlign:\"left\",paddingLeft:\"2%\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"b\" /* FormGroup */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_bootstrap__[\"r\" /* ControlLabel */],{style:{marginRight:\"4px\"}},\"Network:\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"select\",{value:selectedNetwork,onChange:function onChange(e){return setSelectedNetwork(e.target.value);},style:{marginLeft:\"10px\",borderRadius:\"20px\",border:\"none\",padding:\"2px 4px\",color:\"#13C6FF\",fontWeight:\"bold\"},placeholder:\"Select Network\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"option\",null,\"Select Network\"),arrayOfNetworks.map(function(item){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"option\",{value:item},item);})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-main-content-wrapper\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:numberOfNetworks,name:\"Networks\",tooltipText:\"Number of networks present\"})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:leader,name:\"Leader\",tooltipText:\"Server providing the status\"}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:index,name:\"Index\",tooltipText:\"Latest index of Server providing status\"})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:term,name:\"Term\",tooltipText:\"Latest term in cycle\"}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:numberOfTranxInQueue?numberOfTranxInQueue:0,name:\"Pending Transactions\",tooltipText:\"Number of Transactions in queue\"})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-general-info-row-item\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__components_NetworkScreenCard__[\"a\" /* default */],{value:numberOfNewDbInQueue,name:\"Pending Ledgers\",tooltipText:\"Number of pending new ledgers\"})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-table-wrapper\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{style:{paddingTop:\"20px\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\",{style:{padding:\"5px\",textAlign:\"left\"}},\"Server Status\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{id:\"scroll-div-container\",className:\"network-page-table-container\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"table\",{className:\"block-table block-table-stripes\",striped:true,bordered:true,hover:true,size:\"sm\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"thead\",{style:{padding:\"15px\"}},renderTableHeader(serverStatusTableHeadings)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tbody\",null,renderServerStatusTable(serverStatusObject)))))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{style:{paddingTop:\"20px\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\",{style:{padding:\"5px\",textAlign:\"left\"}},\"Ledgers In\",\" \",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"span\",{style:{color:\"#13c6ff\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"em\",null,\"\\\"\",selectedNetwork,\"\\\"\")),\" \",\"Network\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"network-page-table-container\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"table\",{className:\"block-table block-table-stripes\",striped:true,bordered:true,hover:true,size:\"sm\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"thead\",{style:{padding:\"15px\"}},renderTableHeader(tableHeadings)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"tbody\",null,renderNetworkDbsTable(currentNetworkDbsTableBody)))))))));}\n\n/***/ }),\n\n/***/ 863:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NetworkScreenCard;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_bootstrap__ = __webpack_require__(52);\nfunction NetworkScreenCard(_ref){var value=_ref.value,name=_ref.name,_ref$tooltipText=_ref.tooltipText,tooltipText=_ref$tooltipText===undefined?\"\":_ref$tooltipText;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{id:\"network-screen-card\",style:{borderRadius:\"10px\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",backgroundColor:\"#fff\",height:\"100%\"}},tooltipText?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_bootstrap__[\"o\" /* OverlayTrigger */],{placement:\"top\",overlay:__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_bootstrap__[\"n\" /* Tooltip */],{style:{maxWidth:\"auto\",textAlign:\"left\"}},tooltipText)},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{style:{cursor:\"pointer\",color:\"#091133\",textAlign:\"center\"}},name)):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{style:{color:\"#091133\",textAlign:\"center\"}},name),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"p\",{style:{textAlign:\"center\",color:\"#13c6ff\",fontWeight:\"bold\",paddingTop:\"10px\"}},value));}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/11.6decf8d4.chunk.js","import React, { useEffect, useState } from \"react\";\nimport NetworkScreenCard from \"../components/NetworkScreenCard\";\nimport { Form, FormGroup, ControlLabel } from \"react-bootstrap\";\n\n\nexport default function NetworkDashboard({ _db }) {\n\tconst Capitalize = (word) => {\n\t\treturn word[0].toUpperCase() + word.substring(1).toLowerCase();\n\t};\n\n\tconst networkData = _db.networkData;\n\n\tconst { index, leader, raft, id, commit, term } = networkData;\n\tconst serverStatusObject = networkData[\"svr-state\"];\n\n\tconst timeOut = networkData[\"timeout-ms\"];\n\tconst { networks, version } = raft;\n\n\tconst tranxQueue = raft[\"cmd-queue\"];\n\tconst arrayOfNetworks = networks.map((item) => Object.keys(item)[0]);\n\tconst numberOfNetworks = arrayOfNetworks.length;\n\tconst newDbQueue = raft[\"new-db-queue\"];\n\tconst currentNetwork = _db.db.split(\"/\")[0];\n\tconst [selectedNetwork, setSelectedNetwork] = useState(currentNetwork);\n\n\tconst currentNetworkDataObject = networks.filter(\n\t\t(item) => item[selectedNetwork]\n\t)[0][selectedNetwork][\"dbs\"];\n\tconst currentNetworkDbsArray = Object.keys(currentNetworkDataObject);\n\n\tconst currentNetworkDbsTableBody = currentNetworkDbsArray.map((item) => {\n\t\treturn {\n\t\t\tdb: `${selectedNetwork}/${item}`,\n\t\t\tstatus: currentNetworkDataObject[item][\"status\"],\n\t\t\tblock: currentNetworkDataObject[item][\"block\"],\n\t\t};\n\t});\n\n\tconst numberOfTranxInQueue = tranxQueue\n\t\t.filter((item) => {\n\t\t\t//grab the transaction queue of the selected network\n\t\t\treturn selectedNetwork === Object.keys(item)[0];\n\t\t})\n\t\t.map((item) => item[selectedNetwork])[0];\n\n\tconst numberOfNewDbInQueue = newDbQueue\n\t\t.filter((item) => {\n\t\t\t//grab the new database queue of the selected network\n\t\t\treturn selectedNetwork === Object.keys(item)[0];\n\t\t})\n\t\t.map((item) => item[selectedNetwork])[0];\n\n\tconst serverStatusTableHeadings = [\"Server\", \"Status\"];\n\tconst tableHeadings = [\"Ledgers\", \"Status\", \"Block\"];\n\tconst renderTableHeader = (tableHeadings) => {\n\t\treturn tableHeadings.map((key, index) => {\n\t\t\treturn (\n\t\t\t\t<th style={{ textAlign: \"center\" }} key={index}>\n\t\t\t\t\t{key}\n\t\t\t\t</th>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst renderServerStatusTable = (arrayServerStatusObject) => {\n\t\treturn arrayServerStatusObject.map((rowData) => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td className=\"table-content-centered Block\">{rowData.id}</td>\n\t\t\t\t\t<td className=\"table-content-centered \">\n\t\t\t\t\t\t{rowData[\"active?\"] ? \"Active\" : \"Inactive\"}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst renderNetworkDbsTable = (arrayOfNetworksDBs) => {\n\t\treturn arrayOfNetworksDBs.map((rowData) => {\n\t\t\treturn (\n\t\t\t\t<tr>\n\t\t\t\t\t<td className=\"table-content-centered Block\">{rowData.db}</td>\n\n\t\t\t\t\t<td className=\"table-content-centered\">\n\t\t\t\t\t\t{rowData.status.toUpperCase()}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td className=\"table-content-centered\">{rowData.block}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\t\n\treturn (\n\t\t\n\t\t<div className=\"network-page-wrapper\" style={{textAlign: \"center\"}}>\n\t\t\n\t\t\t\t<Form style={{ marginTop: \"20px\", textAlign: \"left\", paddingLeft: \"2%\" }}>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<ControlLabel style={{ marginRight: \"4px\" }}>Network:</ControlLabel>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tvalue={selectedNetwork}\n\t\t\t\t\t\t\tonChange={(e) => setSelectedNetwork(e.target.value)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginLeft: \"10px\",\n\t\t\t\t\t\t\t\tborderRadius: \"20px\",\n\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\tpadding: \"2px 4px\",\n\t\t\t\t\t\t\t\tcolor: \"#13C6FF\",\n\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder={\"Select Network\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option>Select Network</option>\n\t\t\t\t\t\t\t{arrayOfNetworks.map((item) => (\n\t\t\t\t\t\t\t\t<option value={item}>{item}</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Form>\n\t\t\n\n\t\t\t<div className=\"network-page-main-content-wrapper\">\n\t\t\t\t<div className=\"network-page-general-info\">\n\t\t\t\t\t<div className=\"network-page-general-info-row\">\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={numberOfNetworks}\n\t\t\t\t\t\t\t\tname={\"Networks\"}\n\t\t\t\t\t\t\t\ttooltipText=\"Number of networks present\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={leader}\n\t\t\t\t\t\t\t\tname={\"Leader\"}\n\t\t\t\t\t\t\t\ttooltipText={\"Server providing the status\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"network-page-general-info-row\">\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={index}\n\t\t\t\t\t\t\t\tname={\"Index\"}\n\t\t\t\t\t\t\t\ttooltipText={\"Latest index of Server providing status\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t\t\t\tname={\"Term\"}\n\t\t\t\t\t\t\t\ttooltipText={\"Latest term in cycle\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"network-page-general-info-row\">\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={numberOfTranxInQueue ? numberOfTranxInQueue : 0}\n\t\t\t\t\t\t\t\tname={\"Pending Transactions\"}\n\t\t\t\t\t\t\t\ttooltipText={\"Number of Transactions in queue\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"network-page-general-info-row-item\">\n\t\t\t\t\t\t\t<NetworkScreenCard\n\t\t\t\t\t\t\t\tvalue={numberOfNewDbInQueue}\n\t\t\t\t\t\t\t\tname={\"Pending Ledgers\"}\n\t\t\t\t\t\t\t\ttooltipText={\"Number of pending new ledgers\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"network-page-table-wrapper\">\n\t\t\t\t\t<div style={{ paddingTop: \"20px\" }}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3 style={{ padding: \"5px\", textAlign: \"left\" }}>\n\t\t\t\t\t\t\t\tServer Status\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"scroll-div-container\"\n\t\t\t\t\t\t\t\tclassName=\"network-page-table-container\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<table\n\t\t\t\t\t\t\t\t\tclassName=\"block-table block-table-stripes\"\n\t\t\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<thead style={{ padding: \"15px\" }}>\n\t\t\t\t\t\t\t\t\t\t{renderTableHeader(serverStatusTableHeadings)}\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>{renderServerStatusTable(serverStatusObject)}</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: \"20px\" }}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3 style={{ padding: \"5px\", textAlign: \"left\" }}>\n\t\t\t\t\t\t\t\tLedgers In{\" \"}\n\t\t\t\t\t\t\t\t<span style={{ color: \"#13c6ff\" }}>\n\t\t\t\t\t\t\t\t\t<em>\"{selectedNetwork}\"</em>\n\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\tNetwork\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<div className=\"network-page-table-container\">\n\t\t\t\t\t\t\t\t<table\n\t\t\t\t\t\t\t\t\tclassName=\"block-table block-table-stripes\"\n\t\t\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<thead style={{ padding: \"15px\" }}>\n\t\t\t\t\t\t\t\t\t\t{renderTableHeader(tableHeadings)}\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{renderNetworkDbsTable(currentNetworkDbsTableBody)}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/screens/NetworkDashboard.js","import React from \"react\";\nimport {\n\tOverlayTrigger,\n\tTooltip,\n} from \"react-bootstrap\";\n\nexport default function NetworkScreenCard({ value, name, tooltipText=\"\" }) {\n\treturn (\n\n\t\t\t<div\n\t\t\t\tid=\"network-screen-card\"\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: \"10px\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t\n\t\t\t\n\t\t\t\t{\n\t\t\t\t\ttooltipText ? \n\t\t\t\t\t(\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement={\"top\"}\n\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tmaxWidth: \"auto\",\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"left\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{tooltipText}\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p style={{cursor: \"pointer\", color: \"#091133\", textAlign: \"center\" }}>{name}</p>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t) : \n\t\t\t\t\t(\n\t\t\t\t\t\t<p style={{ color: \"#091133\", textAlign: \"center\" }}>{name}</p>\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t<p style={{textAlign: \"center\", color: \"#13c6ff\", fontWeight: \"bold\", paddingTop: \"10px\"}}>{value}</p>\n\t\t\t\t</div>\n\n\t\t\t\t\n\t\t\t\t\n\t\t\n\t);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/NetworkScreenCard.js"],"sourceRoot":""}